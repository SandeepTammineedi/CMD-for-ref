
    2  sudo apt-get update
    3  sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
    
    4  sudo mkdir -p /etc/apt/keyrings
       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    5  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  
     
   15  sudo apt-get update
   
   16  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
   
   17  sudo docker run hello-world
   
   18  sudo groupadd docker

   20  sudo usermod -aG docker azureuser -(always re login after this to take effect, so that we dont need to use 'sudo')
   
  ------------------ nginx----------------------------
    
   ------------------Attache port 80 to the docker image -------------------port=80
  24 docker run -d -p 80:80 --name lmsweb nginx
   
  25 docker ps 
  26 docker image 
    
   
   24  docker images
   25  sudo docker images
   -----------to stop contioner --------------
   26 docker stop 34b74f15b583
   -----------to remove cotainer --------------
   27 docker rm 34b74f15b583
   ----------------prosGres---------------port=5432
   28 docker run postgres
   29 docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=password --name lmspgdb --network lmsnetwork postgres
   
   --------------redis-------------------port=6379.
   30 docker run redis
   --------------mongodb------------------------port=27017
   31 docker run --name lmsmongo -d mongo
   -------------mongo-express--------------------port=
   32 docker run -d mongo-express
   -------------node --------------------------  port=
   33 docker run node
   -----------Docker network---------------------
   34 docker network create -d bridge lmsnetwork
   ----------Docker network check-------------
   35 docker network ls
   
   _________________________________________________________________For frontend___________________________________________________
   _______________________________________________________________________________________________________________________________
   
   ------creating docker container in a costom network --------------------
   36 docker run -d -p 80:80 --network lmsnetwork --name lmsfe lms-web
   _________________________________________________________________For backend___________________________________________________
   _______________________________________________________________________________________________________________________________
   ----need to go to backend folder (api)-------
   backend container 
   37 docker build --tag lms-public-api .
   ---------------run postges----------------
  38 -e POSTGRES_PASSWORD=password --network lmsnetwork --name lmspgdb postgres 
   
  39 docker run -p 8080:8080 --network lmsnetwork -e DATABASE_URL=postgresql://postgres:password@lmspgdb:5432/postgres -e MODE=local lms-public-api
   
   
 ---------------------------------------------------------------------------------------  
   ___________________Docker Compouse ________________________________
   sudo apt-get update
 
### Install docker and docker compose on Ubuntu
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
 
   
   docker compose up 
   
   
   
   
   
   
   
   
   
   
   
   
